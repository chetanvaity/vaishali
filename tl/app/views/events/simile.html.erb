<div id="timeline-with-buttons" align="center"> 

    <div id="newBgPopup" class="bgPopup"></div>
    <div id="newPopup" class="popup">
      <a id="newPopupClose" class="popupClose">x</a>  
      <%= render :partial => "new" %> 
    </div>

    <div id="editBgPopup" class="bgPopup"></div>
    <div id="editPopup" class="popup">
      <a id="editPopupClose" class="popupClose">x</a>  
      <%= render :partial => "edit" %> 
    </div>

    <div id="deleteBgPopup" class="bgPopup"></div>
    <div id="deletePopup" class="popup">
      <a id="deletePopupClose" class="popupClose">x</a>  
      <%= render :partial => "delete" %> 
    </div>

    <!-- timeline with buttons start -->
    <table style="border-spacing:0px 0px;"}><tr>
	    <td class="center-image">
        <span id="moveleft-button" class="block-image"><img src="/images/left-arrow-black.png"></span>
      </td>
      <td>
        <div id="buttons">
          <span id="new-event-button"></span>
          <span id="zoomout-button"></span>
          <span id="zoomin-button"></span>
          <span id="button-terminator"></span>
          <span class="clear"></span>
        </div>
        <div id="my-timeline"></div>
	    </td>
      <td class="center-image">
        <span id="moveright-button" class="block-image"><img src="/images/right-arrow-black.png"></span>
      </td>
    </tr></table>
    <!-- timeline with buttons end -->

    <noscript>
    This page uses Javascript to show you a Timeline. Please enable Javascript in your browser to see the full page. Thank you.
    </noscript>
</div>

    <script type="text/javascript">
      function show_popup(name) {
        $('#'+name+'BgPopup').fadeIn('fast');
        $('#'+name+'Popup').fadeIn('fast');
      }
      function close_popup(name) {
        $('#'+name+'BgPopup').fadeOut('fast');
        $('#'+name+'Popup').fadeOut('fast');
      }

      function createTimeline() {
        // create the simile timeline
        var eventSource = new Timeline.DefaultEventSource();
        var theme = Timeline.ClassicTheme.create(); // create the theme
        theme.event.track.gap = 4;
        theme.event.track.height = 8;
        theme.event.tape.height = 8;
        theme.event.duration.color = "#1e490e";
        theme.event.instant.icon = "images/green-circle.png";
        //theme.event.label.lineColor = "#225915"; - NOT WORKING
        theme.event.label.width = 400;
        theme.event.label.offsetFromLine = 7;

        var bandInfos = [
          Timeline.createBandInfo({
             eventSource:    eventSource,
             date:           "<%= session[:anchor_date].strftime('%a %b %d %Y') %>",
             width:          "85%", 
             intervalUnit:   Timeline.DateTime.<%= session[:interval_unit1] %>,
             multiple:       <%= session[:multiple1] %>,
             intervalPixels: 50/<%= session[:multiple1] %>,
             theme:          theme,
             backgroundColor: "#D8CAA8"
             }),
          Timeline.createBandInfo({
             eventSource:    eventSource,
             date:           "<%= session[:anchor_date].strftime('%a %b %d %Y') %>",
             width:          "15%", 
             intervalUnit:   Timeline.DateTime.<%= session[:interval_unit2] %>,
             multiple:       <%= session[:multiple2] %>,
             intervalPixels: 100/<%= session[:multiple2] %>,
             theme:          theme,
             layout:         'overview'
             })
        ];
        bandInfos[1].syncWith = 0;
        bandInfos[1].highlight = true;

        tl = Timeline.create(document.getElementById("my-timeline"), bandInfos);
        Timeline.loadXML("simile.gen.xml", function(xml, url) { eventSource.loadXML(xml, url); });

        // disable draggability by overriding _onMouseDown function removing 
        // any dragging related functionality
        Timeline._Band.prototype._onMouseDown=function(B,A,C){
          this.closeBubble();
          this._dragging = false;
        };
        Timeline._Band.prototype._onDblClick=function(C,B,E){
        };
      }

      var resizeTimerID = null;
      function onResize() {
         if (resizeTimerID == null) {
             resizeTimerID = window.setTimeout(function() {
                 resizeTimerID = null;
                 tl.layout();
             }, 500);
         }
      }

      function refreshButtons(movein, moveout, moveleft, moveright) {
        if (movein) {
          $("#zoomin-button").css('cursor','pointer');
          $("#zoomin-button").unbind('click').bind('click', function() {
            jQuery.ajax({
              url: "/tl",
              data: { move: "in" },
              success: function(data) {
                createTimeline();
                refreshButtons(data["canmovein"], data["canmoveout"],
                               data["canmoveleft"], data["canmoveright"]);
              }
            });
          });
        } else {
          $("#zoomin-button").css('cursor','auto');
          $("#zoomin-button").unbind('click').bind('click', function() { return false; });
        }
        if (moveout) {
          $("#zoomout-button").css('cursor','pointer');
          $("#zoomout-button").unbind('click').bind('click', function() {
            jQuery.ajax( {
              url: "/tl",
              data: { move: "out" },
              success: function(data) {
                createTimeline();
                refreshButtons(data["canmovein"], data["canmoveout"],
                               data["canmoveleft"], data["canmoveright"]);
              }
            } );
          });
        } else {
          $("#zoomout-button").css('cursor','auto');
          $("#zoomout-button").unbind('click').bind('click', function() {
            return false;
          });
        } 
        if (moveleft) {
          $('#moveleft-button').css('cursor','pointer');
          $("#moveleft-button").unbind('click').bind('click', function() {
            jQuery.ajax( {
              url: "/tl",
              data: { move: "left" },
              success: function(data) {
                createTimeline();
                refreshButtons(data["canmovein"], data["canmoveout"],
                               data["canmoveleft"], data["canmoveright"]);
              }
            } );
          });
        } else {
          $('#moveleft-button').css('cursor','auto');
          $("#moveleft-button").unbind('click').bind('click', function() {
            return false;
          });
        }
        if (moveright) {
          $('#moveright-button').css('cursor','pointer');
          $("#moveright-button").unbind('click').bind('click', function() {
            jQuery.ajax( {
              url: "/tl",
              data: { move: "right" },
              success: function(data) {
                createTimeline();
                refreshButtons(data["canmovein"], data["canmoveout"],
                               data["canmoveleft"], data["canmoveright"]);
              }
            } );
          });
        } else {
          $('#moveright-button').css('cursor','auto');
          $("#moveright-button").unbind('click').bind('click', function() {
            return false;
          });
        }
      }

      $(document).ready(function(){  
        $("#new-event-button").click(function() {
          show_popup("new");
        });

        $("#newPopupClose").click(function() {
          close_popup("new");
        });

        /* bind click for any edit event elements added now or in future */
        $(".edit-event").live('click', function() { 
          event_id = this.id.match(/edit-event-(\d+)/)[1];
          jQuery.ajax( {
            async: false,
            url: "/events/get/" + event_id,
            success: function(data) {
              $("#edit_event_form #event_id").val(data["event"]["id"]);
              $("#edit_event_form #event_name").val(data["event"]["name"]);
              $("#edit_event_form #event_start").val(data["event"]["start"]);
              if (data["event"]["end"] != null) {
                $("#edit_event_form #event_end").val(data["event"]["end"]);
              }
              if (data["event"]["description"] != null) {
                $("#edit_event_form #event_description").val(data["event"]["description"]);
              }
            }
          } );
          show_popup("edit");
        });

        $("#editPopupClose").click(function() {
          close_popup("edit");
        });

        $(".delete-event").live('click', function() {
          event_id = this.id.match(/delete-event-(\d+)/)[1];
          $("#delete_event_form #event_id").val(event_id);
          show_popup("delete");
         });

        $("#deletePopupClose").click(function() {
          close_popup("delete");
        });

        $("#delete_event_form #event_delete_cancel").click(function() {
          close_popup("delete");
        });

        $(".historicaldate").attr("title", "15 Aug 1947<br>December 1755<br>1005 AD<br>232 BC");
        $(".historicaldate").tooltip({ position: "center right" });

        var tl;
        createTimeline();
        refreshButtons( <%= session[:canmovein] %>,
                        <%= session[:canmoveout] %>,
                        <%= session[:canmoveleft] %>,
                        <%= session[:canmoveright] %>);
     });

    </script>
